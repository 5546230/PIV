import matplotlib.pyplot as plt
import numpy as np

x_cor = [
    0.0000000, 0.0005839, 0.0023342, 0.0052468, 0.0093149, 0.0145291, 0.0208771, 0.0283441,
    0.0369127, 0.0465628, 0.0572720, 0.0690152, 0.0817649, 0.0954915, 0.1101628, 0.1257446,
    0.1422005, 0.1594921, 0.1775789, 0.1964187, 0.2159676, 0.2361799, 0.2570083, 0.2784042,
    0.3003177, 0.3226976, 0.3454915, 0.3686463, 0.3921079, 0.4158215, 0.4397317, 0.4637826,
    0.4879181, 0.5120819, 0.5362174, 0.5602683, 0.5841786, 0.6078921, 0.6313537, 0.6545085,
    0.6773025, 0.6996823, 0.7215958, 0.7429917, 0.7638202, 0.7840324, 0.8035813, 0.8224211,
    0.8405079, 0.8577995, 0.8742554, 0.8898372, 0.9045085, 0.9182351, 0.9309849, 0.9427280,
    0.9534372, 0.9630873, 0.9716559, 0.9791229, 0.9854709, 0.9906850, 0.9947532, 0.9976658,
    0.9994161, 1.0000000, 0.0000000, 0.0005839, 0.0023342, 0.0052468, 0.0093149, 0.0145291,
    0.0208771, 0.0283441, 0.0369127, 0.0465628, 0.0572720, 0.0690152, 0.0817649, 0.0954915,
    0.1101628, 0.1257446, 0.1422005, 0.1594921, 0.1775789, 0.1964187, 0.2159676, 0.2361799,
    0.2570083, 0.2784042, 0.3003177, 0.3226976, 0.3454915, 0.3686463, 0.3921079, 0.4158215,
    0.4397317, 0.4637826, 0.4879181, 0.5120819, 0.5362174, 0.5602683, 0.5841786, 0.6078921,
    0.6313537, 0.6545085, 0.6773025, 0.6996823, 0.7215958, 0.7429917, 0.7638202, 0.7840324,
    0.8035813, 0.8224211, 0.8405079, 0.8577995, 0.8742554, 0.8898372, 0.9045085, 0.9182351,
    0.9309849, 0.9427280, 0.9534372, 0.9630873, 0.9716559, 0.9791229, 0.9854709, 0.9906850,
    0.9947532, 0.9976658, 0.9994161, 1.0000000
]

y_cor = [
    0.0000000, 0.0042603, 0.0084289, 0.0125011, 0.0164706, 0.0203300, 0.0240706, 0.0276827,
    0.0311559, 0.0344792, 0.0376414, 0.0406310, 0.0434371, 0.0460489, 0.0484567, 0.0506513,
    0.0526251, 0.0543715, 0.0558856, 0.0571640, 0.0582048, 0.0590081, 0.0595755, 0.0599102,
    0.0600172, 0.0599028, 0.0595747, 0.0590419, 0.0583145, 0.0574033, 0.0563200, 0.0550769,
    0.0536866, 0.0521620, 0.0505161, 0.0487619, 0.0469124, 0.0449802, 0.0429778, 0.0409174,
    0.0388109, 0.0366700, 0.0345058, 0.0323294, 0.0301515, 0.0279828, 0.0258337, 0.0237142,
    0.0216347, 0.0196051, 0.0176353, 0.0157351, 0.0139143, 0.0121823, 0.0105485, 0.0090217,
    0.0076108, 0.0063238, 0.0051685, 0.0041519, 0.0032804, 0.0025595, 0.0019938, 0.0015870,
    0.0013419, 0.0012600, 0.0000000, -0.0042603, -0.0084289, -0.0125011, -0.0164706, -0.0203300,
    -0.0240706, -0.0276827, -0.0311559, -0.0344792, -0.0376414, -0.0406310, -0.0434371, -0.0460489,
    -0.0484567, -0.0506513, -0.0526251, -0.0543715, -0.0558856, -0.0571640, -0.0582048, -0.0590081,
    -0.0595755, -0.0599102, -0.0600172, -0.0599028, -0.0595747, -0.0590419, -0.0583145, -0.0574033,
    -0.0563200, -0.0550769, -0.0536866, -0.0521620, -0.0505161, -0.0487619, -0.0469124, -0.0449802,
    -0.0429778, -0.0409174, -0.0388109, -0.0366700, -0.0345058, -0.0323294, -0.0301515, -0.0279828,
    -0.0258337, -0.0237142, -0.0216347, -0.0196051, -0.0176353, -0.0157351, -0.0139143, -0.0121823,
    -0.0105485, -0.0090217, -0.0076108, -0.0063238, -0.0051685, -0.0041519, -0.0032804, -0.0025595,
    -0.0019938, -0.0015870, -0.0013419, -0.0012600
]


def plot_airfoil(angle_of_attack, scalefactor, xloc, yloc, ax=None):
    x = np.array(x_cor)
    y = np.array(y_cor)

    scale = scalefactor    
    x_qc_target, y_qc_target = xloc, yloc

    # Quarter chord as rotation center
    x_qc_local = 0.25 * scale
    y_qc_local = 0.0

    alpha_rad = -np.radians(angle_of_attack)

    # Scale
    x_scaled = x * scale
    y_scaled = y * scale

    # Rotate about quarter chord
    x_rot = np.cos(alpha_rad) * (x_scaled - x_qc_local) - np.sin(alpha_rad) * (y_scaled - y_qc_local)
    y_rot = np.sin(alpha_rad) * (x_scaled - x_qc_local) + np.cos(alpha_rad) * (y_scaled - y_qc_local)

    # Translate to desired position
    x_final = x_rot + x_qc_target
    y_final = y_rot + y_qc_target

    # Use passed-in axis or create a new one
    if ax is None:
        fig, ax = plt.subplots()
        standalone = True
    else:
        standalone = False

    ax.fill(x_final, y_final, color='grey', alpha=1)

    if standalone:
        ax.set_aspect('equal')
        ax.set_xlabel("x")
        ax.set_ylabel("y")


if __name__ == "__main__":
    angle_of_attack = 0  # Example angle of attack in degrees
    plot_airfoil(0, 100, 52, 70, ax=None)
    plot_airfoil(angle_of_attack, 1, 0.25, 0, ax=None)
    plt.show()


